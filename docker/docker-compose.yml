services:
  # --- MongoDB ---
  mongo:
    image: mongo:6.0
    container_name: mongo
    restart: always
    volumes:
      - mongo-data:/data/db
      - ./mongo-init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - app-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-ui
    ports:
      - "8088:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin
    networks:
      - app-network

  # --- RabbitMQ ---
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - app-network

  # --- Redis ---
  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - app-network

  # --- Logstash ---
  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:latest
    container_name: logstash
    volumes:
      - ./logstash/logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    networks:
      - app-network


  # --- Elasticsearch ---
  elasticsearch:
    image: elasticsearch:7.17.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - app-network

  # --- Kibana ---
  kibana:
    image: kibana:7.17.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - app-network

  # --- Prometheus ---
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    networks:
      - app-network

  # --- Grafana ---
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      - app-network
    depends_on:
      - prometheus

  # --- Domain Service ---
  domain-service:
    build:
      context: ./domain-service
      dockerfile: Dockerfile
    container_name: domain-service
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    depends_on:
      - mongo
      - rabbitmq
    networks:
      - app-network

  # --- Gateway ---
  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    container_name: gateway
    ports:
      - "8081:8081"
    depends_on:
      - domain-service
      - redis
      - logstash
    networks:
      - app-network

volumes:
  mongo-data:
  opensearch_data:
  elasticsearch_data:

networks:
  app-network:
    driver: bridge
